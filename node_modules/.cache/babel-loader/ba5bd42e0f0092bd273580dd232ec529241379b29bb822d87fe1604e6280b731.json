{"ast":null,"code":"var _jsxFileName = \"C:\\\\MINDX\\\\final_project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Tabs from './components/Tabs';\nimport AddTaskForm from './components/AddTaskForm';\nimport TaskList from './components/TaskList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [activeTab, setActiveTab] = useState('All');\n\n  // Filter tasks based on active tab\n  const getFilteredTasks = () => {\n    switch (activeTab) {\n      case 'Active':\n        return tasks.filter(task => task.active);\n      case 'Completed':\n        return tasks.filter(task => !task.active);\n      default:\n        return tasks;\n    }\n  };\n\n  // Add new task\n  const addTask = taskText => {\n    const task = {\n      id: Date.now(),\n      text: taskText,\n      active: true\n    };\n    setTasks([...tasks, task]);\n  };\n\n  // Toggle task status\n  const toggleTask = id => {\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      active: !task.active\n    } : task));\n  };\n\n  // Delete individual task\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  // Delete all completed tasks\n  const deleteAllCompleted = () => {\n    setTasks(tasks.filter(task => task.active));\n  };\n  const filteredTasks = getFilteredTasks();\n  const canAddTask = activeTab === 'All' || activeTab === 'Active';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n        activeTab: activeTab,\n        onTabChange: setActiveTab\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), canAddTask && /*#__PURE__*/_jsxDEV(AddTaskForm, {\n        onAddTask: addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: filteredTasks,\n        activeTab: activeTab,\n        onToggleTask: toggleTask,\n        onDeleteTask: deleteTask,\n        onDeleteAllCompleted: deleteAllCompleted\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wIsqKWZPpSR1xGEfTUrR/8LogEM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Header","Tabs","AddTaskForm","TaskList","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","activeTab","setActiveTab","getFilteredTasks","filter","task","active","addTask","taskText","id","Date","now","text","toggleTask","map","deleteTask","deleteAllCompleted","filteredTasks","canAddTask","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onTabChange","onAddTask","onToggleTask","onDeleteTask","onDeleteAllCompleted","_c","$RefreshReg$"],"sources":["C:/MINDX/final_project/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header';\r\nimport Tabs from './components/Tabs';\r\nimport AddTaskForm from './components/AddTaskForm';\r\nimport TaskList from './components/TaskList';\r\n\r\nfunction App() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [activeTab, setActiveTab] = useState('All');\r\n\r\n  // Filter tasks based on active tab\r\n  const getFilteredTasks = () => {\r\n    switch (activeTab) {\r\n      case 'Active':\r\n        return tasks.filter(task => task.active);\r\n      case 'Completed':\r\n        return tasks.filter(task => !task.active);\r\n      default:\r\n        return tasks;\r\n    }\r\n  };\r\n\r\n  // Add new task\r\n  const addTask = (taskText) => {\r\n    const task = {\r\n      id: Date.now(),\r\n      text: taskText,\r\n      active: true\r\n    };\r\n    setTasks([...tasks, task]);\r\n  };\r\n\r\n  // Toggle task status\r\n  const toggleTask = (id) => {\r\n    setTasks(tasks.map(task => \r\n      task.id === id ? { ...task, active: !task.active } : task\r\n    ));\r\n  };\r\n\r\n  // Delete individual task\r\n  const deleteTask = (id) => {\r\n    setTasks(tasks.filter(task => task.id !== id));\r\n  };\r\n\r\n  // Delete all completed tasks\r\n  const deleteAllCompleted = () => {\r\n    setTasks(tasks.filter(task => task.active));\r\n  };\r\n\r\n  const filteredTasks = getFilteredTasks();\r\n  const canAddTask = activeTab === 'All' || activeTab === 'Active';\r\n\r\n  return (\r\n    <div className=\"todo-app\">\r\n      <div className=\"todo-container\">\r\n        <Header />\r\n        \r\n        <Tabs \r\n          activeTab={activeTab} \r\n          onTabChange={setActiveTab} \r\n        />\r\n\r\n        {/* Add Task Form - Only show in All and Active tabs */}\r\n        {canAddTask && (\r\n          <AddTaskForm onAddTask={addTask} />\r\n        )}\r\n\r\n        <TaskList \r\n          tasks={filteredTasks}\r\n          activeTab={activeTab}\r\n          onToggleTask={toggleTask}\r\n          onDeleteTask={deleteTask}\r\n          onDeleteAllCompleted={deleteAllCompleted}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}